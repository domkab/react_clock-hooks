{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","name","hasClock","today","Date","toUTCString","slice","useState","currentTime","setCurrentTime","clockName","setClockName","useEffect","timerId","setInterval","value","now","toString","getRandomName","timeInterval","clearInterval","console","info","debug","className","App","state","toggleClockVisibility","setState","prevState","globalHandleLeftClick","event","preventDefault","globalHandleRightClick","document","addEventListener","this","removeEventListener","React","Component","ReactDOM","render","getElementById"],"mappings":"+OAQaA,EACX,SAAC,GAGI,IAFLC,EAEI,EAFJA,KACAC,EACI,EADJA,SAEMC,GAAQ,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAEnD,EAAsCC,mBAASJ,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAkCF,mBAAiBN,GAAnD,mBAAOS,EAAP,KAAkBC,EAAlB,KAmCA,OA3BAC,qBAAU,WACR,IAAMC,EAAUC,aAAY,WAC1BH,EARkB,WACpB,IAAMI,EAAQX,KAAKY,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAKDG,MACZ,MAEGC,EAAeL,aAAY,WAC/BL,GAAe,IAAIL,MAAOC,cAAcC,OAAO,IAAK,MACnD,KAEH,OAAO,WACLc,cAAcP,GACdO,cAAcD,MAEf,IAEHP,qBAAU,WACJV,GACFmB,QAAQC,KAAKd,KAEd,CAACA,EAAaN,IAEjBU,qBAAU,WACJV,GACFmB,QAAQE,MAAR,gCAAuCb,MAExC,CAACA,EAAWR,IAGb,qCACE,6CACCA,GACC,sBAAKsB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,IAEF,YACD,sBAAMc,UAAU,cAAhB,SACGhB,WCpDAiB,EAAb,4MACEC,MAAkB,CAChBhB,UAAW,UACXR,UAAU,GAHd,EAgBEyB,sBAAwB,WACtB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAAE3B,UAAW2B,EAAU3B,cAjBzD,EAoBE4B,sBAAwB,SAACC,GACvBA,EAAMC,iBACD,EAAKN,MAAMxB,UACd,EAAKyB,yBAvBX,EA2BEM,uBAAyB,SAACF,GACxBA,EAAMC,iBACF,EAAKN,MAAMxB,UACb,EAAKyB,yBA9BX,uDAME,WACEO,SAASC,iBAAiB,QAASC,KAAKN,uBACxCI,SAASC,iBAAiB,cAAeC,KAAKH,0BARlD,kCAWE,WACEC,SAASG,oBAAoB,QAASD,KAAKN,uBAC3CI,SAASG,oBAAoB,cAAeD,KAAKH,0BAbrD,oBAkCE,WACE,MAAgCG,KAAKV,MAA7BxB,EAAR,EAAQA,SAAUQ,EAAlB,EAAkBA,UAElB,OACE,qBAAKc,UAAU,MAAf,SACGtB,GAEC,cAAC,EAAD,CACED,KAAMS,EACNR,SAAUA,UA3CtB,GAAyBoC,IAAMC,WCN/BC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.5f346be4.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState, useEffect } from 'react';\n\ninterface ClockProps {\n  name: string;\n  hasClock: boolean;\n}\n\nexport const Clock: React.FC<ClockProps>\n= ({\n  name,\n  hasClock,\n}) => {\n  const today = new Date().toUTCString().slice(-12, -4);\n\n  const [currentTime, setCurrentTime] = useState(today);\n  const [clockName, setClockName] = useState<string>(name);\n\n  const getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    const timeInterval = setInterval(() => {\n      setCurrentTime(new Date().toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => {\n      clearInterval(timerId);\n      clearInterval(timeInterval);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (hasClock) {\n      console.info(currentTime);\n    }\n  }, [currentTime, hasClock]);\n\n  useEffect(() => {\n    if (hasClock) {\n      console.debug(`Clock name changed to ${clockName}`);\n    }\n  }, [clockName, hasClock]);\n\n  return (\n    <>\n      <h1>React clock</h1>\n      {hasClock && (\n        <div className=\"Clock\">\n          <strong className=\"Clock__name\">\n            {clockName}\n          </strong>\n          {' time is '}\n          <span className=\"Clock__time\">\n            {currentTime}\n          </span>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface AppState {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state: AppState = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.globalHandleLeftClick);\n    document.addEventListener('contextmenu', this.globalHandleRightClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.globalHandleLeftClick);\n    document.removeEventListener('contextmenu', this.globalHandleRightClick);\n  }\n\n  toggleClockVisibility = () => {\n    this.setState((prevState) => ({ hasClock: !prevState.hasClock }));\n  };\n\n  globalHandleLeftClick = (event: MouseEvent) => {\n    event.preventDefault();\n    if (!this.state.hasClock) {\n      this.toggleClockVisibility();\n    }\n  };\n\n  globalHandleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    if (this.state.hasClock) {\n      this.toggleClockVisibility();\n    }\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        {hasClock\n        && (\n          <Clock\n            name={clockName}\n            hasClock={hasClock}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}